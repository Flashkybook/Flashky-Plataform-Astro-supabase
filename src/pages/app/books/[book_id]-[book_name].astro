---
import Layout from "@/layouts/index.astro";
import { supabase } from "@lib/supabase";
import SetBook from "@components/SetBook.astro";

import FlashCard from "@components/ListCard.astro";
import { $user } from "@lib/db/user.store";
import BtnIcon from "@components/ui/BtnIcon.astro";

const { book_id, book_name } = Astro.params;

const { redirect, url } = Astro;
const userdata = $user.get();

if (userdata === undefined) {
    return redirect("/");
}

//  get all card_expresion
const { data: card_expresion, error } = await supabase
    .from("flashcard")
    .select("*")
    .eq("user_book_id", book_id);
---

<Layout>
    <div class="container mx-auto mt-14">
        <div class="flex">
            <div
                class="flex w-full justify-between flex-row gap-4 items-center"
            >
                <SetBook book_id={book_id} book_name={book_name} />

                <div delete-book book-id={book_id} class="">
                    <BtnIcon>
                        <span class="material-symbols-outlined">delete</span>
                    </BtnIcon>

                    <script>
                        const button = document.querySelector("[delete-book]");
                        const book_id = button?.getAttribute("book-id");
                        button?.addEventListener("click", (e) => {
                            e.preventDefault();
                            const accept = confirm(
                                "Â¿Deseas borrar esta tarjeta?",
                            );

                            if (accept) {
                                fetch(`/api/v0/userbook/delete-${book_id}`, {
                                    method: "POST",
                                }).then((res) => {
                                    if (res.status == 200) {
                                        window.location.href = "/app/books";
                                    }
                                });
                            }
                        });
                    </script>
                </div>
            </div>
        </div>

        <ul class="flex flex-col gap-8 mt-16">
            {
                card_expresion &&
                    card_expresion.map((v) => (
                        <li class="shadow-md shadow-black bg-surface-100 dark:bg-surfacedark-100">
                            <FlashCard
                                set={true}
                                name={v.expression_name}
                                userBook_id={book_id as string}
                                card_id={v.id}
                                expression_id={v.expression_id}
                            />
                        </li>
                    ))
            }

            <li>
                <form method="POST" action="/api/v0/flashcard/add" class="">
                    <input type="hidden" name="user_book_id" value={book_id} />
                    <input type="hidden" name="user_id" value={userdata.id} />
                    <input
                        type="hidden"
                        name="user_book_name"
                        value={book_name}
                    />

                    <div class="relative z-0">
                        <input
                            type="text"
                            aria-label="inputtext"
                            required
                            type="text"
                            name="expression"
                            name="username"
                            class="w-full h-14 block leading-5 relative py-2 px-4 rounded bg-neutral-10 dark:bg-neutral-900 border focus:border-2 border-gray-500 overflow-x-auto focus:outline-none focus:border-primary-600 focus:ring-0 dark:text-gray-200 dark:border-gray-400 dark:focus:border-primary-200 peer"
                            placeholder=" "
                            value=""
                        />

                        <label
                        onclick="()=>console.log(this)"
                            for="input33"
                            class="absolute tracking-[.03125em] text-gray-500 dark:text-gray-400 bg-neutral-10 dark:bg-transparent duration-300 transform px-1 -translate-y-7 scale-75 top-4 z-10 origin-[0] left-4 peer-focus:left-4 peer-focus:text-primary-600 dark:peer-focus:text-primary-200 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-7 peer-focus:bg-neutral-10 dark:peer-focus:bg-neutral-900 peer-focus:px-1 peer-invalid:text-error-600 dark:peer-invalid:text-error-200
                            pointer-events-none
                            "
                            >Nueva Expression</label
                        >
                    </div>

                    <div class="absolute right-1">
                        <button
                            type="submit"
                            class="relative flex h-10 w-10 sm:w-max ml-auto items-center justify-center sm:px-6 before:absolute before:inset-0 before:rounded-full before:bg-primary before:transition before:duration-300 hover:before:scale-105 active:duration-75 active:before:scale-95"
                        >
                            <span
                                class="hidden relative text-base font-semibold text-white dark:text-gray-900 sm:block"
                            >
                                add
                            </span>
                        </button>
                    </div>
                </form>
            </li>
        </ul>
    </div>
</Layout>
