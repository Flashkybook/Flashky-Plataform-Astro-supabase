---
import type { SPB_FlashCard } from "../models/schema";
import isToday from '@shared/utils/isToday';
import BtnDelete from "./BtnDelete";

interface Props {
    flashcard: SPB_FlashCard;
}

const { flashcard } = Astro.props;
---

<div>
    <div class="w-full flex justify-between p-2 gap-6">
        <div
            class="w-14 h-14 flex items-center justify-center title-md font-bold dark:text-neutral-900"
        >
            <img src="/favicon.svg" alt="media 2" class="w-8 h-8" />
        </div>
        <div class="flex flex-col flex-grow">
            <p class="tracking-[.03125em] underline">
                {flashcard.expression_name}
            </p>
            <p class="tracking-[.03125em]">
                Today:
                {
                    isToday(flashcard.last_review) ? (
                        <span class="material-symbols-outlined text-green-600">
                            check_circle
                        </span>
                    ) : (
                        <span class="material-symbols-outlined text-red-600 ">
                            cancel
                        </span>
                    )
                }
            </p>
        </div>
        <div>
            ultima: {flashcard.last_review}
        </div>

        <span class="text-[0.75rem] text-blue-100 text-center min-w-[5rem]">
            <div
                class="w-full md:w-full bg-gray-900 rounded-full border-2 border-black"
            >
                <div
                    class="bg-slate-600 leading-none rounded-full"
                    style={{ width: `${(flashcard.efactor * 100) / 5}%` }}
                >
                    {(flashcard.efactor * 100) / 5}%
                </div>
            </div>
        </span>

        <div class="flex items-center justify-center">

        <BtnDelete client:only="preact" flashcard={flashcard} />
            
        </div>
    </div>
</div>
